{"version":3,"sources":["app.js","components/sign-up.js","services/notes-service.js","notes/notes.js","users/users.js"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["(function() {\n  var app = angular.module('notely', [\n    'ui.router',\n    'notely.notes'\n  ]);\n\n  function config($urlRouterProvider) {\n    $urlRouterProvider.otherwise('/notes/');\n  }\n\n  config['$inject'] = ['$urlRouterProvider'];\n  app.config(config);\n\n  app.constant('API_BASE', 'http://localhost:3000/api/v1/');\n})();\n","angular.module('notely')\r\n.directive('signUp', function() {\r\n  return {\r\n    templateUrl: '/components/sign-up.html'\r\n  };\r\n});\r\n","angular.module('notely')\r\n  .service('NotesService', NotesService);\r\n\r\n// NotesService\r\n// Handle CRUD operations against the server.\r\nNotesService.$inject = ['$http', 'API_BASE'];\r\nfunction NotesService($http, API_BASE) {\r\n  var self = this;\r\n  self.notes = [];\r\n  self.latestResult = \"\";\r\n\r\n  // Get all notes from server\r\n  self.fetch = function() {\r\n    return $http.get(API_BASE + 'notes')\r\n    .then(\r\n      // Success callback\r\n      function(response) {\r\n        self.notes = response.data;\r\n      },\r\n      // Failure callback\r\n      function(response) {\r\n        // TODO: Handle failure\r\n      }\r\n    );\r\n  };\r\n\r\n  self.get = function() {\r\n    return self.notes;\r\n  };\r\n\r\n  self.findById = function(noteId) {\r\n    // Look through 'self.notes' for a note with a match _id.\r\n    for (var i = 0; i < self.notes.length; i++) {\r\n      if (self.notes[i]._id === noteId) {\r\n        //making copy so if you change it only change on the entry not the\r\n        // List\r\n        return angular.copy(self.notes[i]);\r\n      }\r\n    }\r\n    return {};\r\n  };\r\n\r\n  self.getMessage = function() {\r\n    return self.latestResult;\r\n  };\r\n\r\n  self.create = function(note) {\r\n    var noteCreatePromise =  $http.post(API_BASE + 'notes', {\r\n      note: note\r\n    });\r\n\r\n    noteCreatePromise.then(function(response) {\r\n      self.notes.unshift(response.data.note);\r\n      self.latestResult = response.data.message;\r\n    });\r\n\r\n    return noteCreatePromise;\r\n  }\r\n\r\n  self.update = function(note) {\r\n    var noteUpdatePromise =  $http.put(API_BASE + 'notes/' + note._id, {\r\n      note: {\r\n        title: note.title,\r\n        body_html: note.body_html\r\n      }\r\n    });\r\n\r\n    noteUpdatePromise.then(function(response) {\r\n      self.replaceNote(response.data.note);\r\n    });\r\n    return noteUpdatePromise;\r\n  };\r\n\r\n  self.replaceNote = function(note) {\r\n    for (var i = 0; i < self.notes.length; i++) {\r\n      if (self.notes[i]._id === note._id) {\r\n        self.notes[i] = note;\r\n      }\r\n    }\r\n    return {};\r\n  }\r\n\r\n  self.delete = function(note) {\r\n    var noteDeletePromise =  $http.delete(API_BASE + 'notes/' + note._id);\r\n    noteDeletePromise.then(function(response) {\r\n      // alert(response.data.message);\r\n      self.removeNote(note);\r\n    });\r\n    return noteDeletePromise;\r\n  };\r\n\r\n  self.removeNote = function(note) {\r\n    for (var i = 0; i < self.notes.length; i++) {\r\n      if (self.notes[i]._id === note._id) {\r\n        self.notes.splice(i, 1);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n}\r\n","(function (){\r\n\r\n  angular.module('notely.notes', [\r\n    'ui.router',\r\n    'textAngular'\r\n  ])\r\n  .config(notesConfig);\r\n// This is my comment\r\n  notesConfig['$inject'] = ['$stateProvider'];\r\n  function notesConfig($stateProvider) {\r\n    $stateProvider\r\n\r\n      .state('notes', {\r\n        url: '/notes',\r\n        resolve: {\r\n          notesLoaded:  ['NotesService', function(NotesService) {\r\n            return NotesService.fetch();\r\n          }]\r\n        },\r\n        templateUrl: '/notes/notes.html',\r\n        controller: NotesController\r\n      })\r\n\r\n      .state('notes.form', {\r\n          url: '/:noteId',\r\n          templateUrl: '/notes/notes-form.html',\r\n          controller: NotesFormController\r\n      });\r\n  }\r\n\r\n  NotesController.$inject = ['$state', '$scope', 'NotesService'];\r\n  function NotesController($state, $scope, NotesService) {\r\n      $scope.notes = {};\r\n      $scope.notes = NotesService.get();\r\n  }\r\n\r\n  NotesFormController.$inject = ['$state', '$scope', 'NotesService']\r\n  function NotesFormController($state, $scope, NotesService) {\r\n    $scope.note = NotesService.findById($state.params.noteId);\r\n\r\n    $scope.save = function () {\r\n       // Decide whether to call create or update...\r\n       if ($scope.note._id) {\r\n         NotesService.update($scope.note).then(function(response) {\r\n           $scope.note = angular.copy(response.data.note);\r\n         });\r\n       }\r\n       else {\r\n         NotesService.create($scope.note).then(function(response) {\r\n           $state.go('notes.form', { noteId: response.data.note._id });\r\n         }).then(function(){\r\n           $scope.latestResult = NotesService.getMessage();\r\n         });\r\n       }\r\n    };\r\n\r\n    $scope.delete = function () {\r\n      NotesService.delete($scope.note).then(function(repsonse) {\r\n        $state.go('notes.form', { noteId: undefined });\r\n      });\r\n    };\r\n\r\n    $scope.buttonText = function() {\r\n      if ($scope.note._id) {\r\n        return 'Save Changes';\r\n      }\r\n      return 'Save';\r\n    }\r\n  }\r\n})();\r\n","{\r\n  angular.module('notely')\r\n  .config(usersConfig);\r\n\r\n  usersConfig.$inject = ['$stateProvider'];\r\n  function usersConfig ($stateProvider) {\r\n    $stateProvider\r\n      .state('sign-up', {\r\n        url: '/sign-up',\r\n        template: '<sign-up></sign-up>'\r\n      });\r\n  };\r\n}\r\n"],"sourceRoot":"/source/"}